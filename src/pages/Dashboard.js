"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
// src/components/Dashboard.tsx
const TotalRevenue_1 = require("../components/TotalRevenue");
const components_1 = require("../components");
const DashboardDB_1 = require("../DB/DashboardDB"); // Make sure this file exists and is correctly imported
const react_1 = require("react");
const PropertyDB_1 = require("../DB/PropertyDB"); // Ensure that Propertydata is imported from the correct file
const react_router_dom_1 = require("react-router-dom");
const Dashboard = ({ isDarkMode }) => {
    const { circleChartData, progressBarData } = DashboardDB_1.DashboardData || {}; // Ensure DashboardData is defined and destructured
    const [selectedFilter, setSelectedFilter] = (0, react_1.useState)('popular');
    const handleFilterClick = (filter) => {
        setSelectedFilter(filter);
    };
    const navigate = (0, react_router_dom_1.useNavigate)();
    // Check if PropertyList exists and filter properties based on selected filter
    const filteredProperties = PropertyDB_1.Propertydata.PropertyList[selectedFilter] || [];
    return ((0, jsx_runtime_1.jsxs)("div", { className: `pt-7 pb-[30px] px-[25px]`, children: [(0, jsx_runtime_1.jsx)("h1", { className: `font-bold text-2xl mb-5 ${isDarkMode ? "text-[#EFEFEF]" : "text-[#11142D]"}`, children: "Dashboard" }), (0, jsx_runtime_1.jsx)("div", { className: "grid max-md:grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-6 mb-6", children: circleChartData && circleChartData.map(data => ((0, jsx_runtime_1.jsx)("div", { className: "w-full", children: (0, jsx_runtime_1.jsx)(components_1.PieChart, { isDarkMode: isDarkMode, title: data.title, value: data.number, series: data.part, colors: data.colors }) }, data.id))) }), (0, jsx_runtime_1.jsxs)("div", { className: "flex max-xl:flex-col gap-5 mt-8 mb-6", children: [(0, jsx_runtime_1.jsx)("div", { className: `relative transition-all duration-300 min-h-[363px] ${isDarkMode ? "bg-[#1A1D1F]" : "bg-[#FCFCFC]"} flex-1 p-5 rounded-[15px] col-span-1 sm:col-span-2 xl:col-span-4`, children: (0, jsx_runtime_1.jsx)(components_1.TotalRevenue, { title: "Total Revenue", series: TotalRevenue_1.TotalRevenueSeries, options: TotalRevenue_1.TotalRevenueOptions, isDarkMode: isDarkMode }) }), (0, jsx_runtime_1.jsxs)("div", { className: `xl:max-w-[390px] transition-all duration-300 max-h-[363px] scrollbar  min-h-[363px] w-full ${isDarkMode ? "bg-[#1A1D1F]" : "bg-[#FCFCFC]"} px-5 pt-5 pb-9 rounded-[10px]`, children: [(0, jsx_runtime_1.jsx)("h2", { className: `font-semibold text-lg ${isDarkMode ? "text-[#EFEFEF]" : "bg-[#FCFCFC]"}  text-[#11142D] mb-5 leading-6`, children: "Property Referrals" }), progressBarData && progressBarData.map((bar) => ((0, jsx_runtime_1.jsx)(components_1.ProgressBar, Object.assign({ isDarkMode: isDarkMode }, bar), bar.title)))] })] }), (0, jsx_runtime_1.jsxs)("div", { className: `${isDarkMode ? "bg-[#1A1D1F]" : "bg-[#FCFCFC]"} transition-all duration-300 p-5 rounded-[15px]`, children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex max-md:flex-col md:items-center justify-between mb-[15px] gap-x-2.5 max-md:gap-5", children: [(0, jsx_runtime_1.jsx)("h2", { className: `font-semibold text-lg ${isDarkMode ? "text-[#EFEFEF]" : "text-[#11142D]"}`, children: "Property List" }), (0, jsx_runtime_1.jsx)("div", { className: "flex flex-wrap gap-2.5", children: ['popular', 'recommended', 'newest', 'mostRecent'].map(filter => ((0, jsx_runtime_1.jsx)("button", { className: `filter_btn font-semibold text-xs p-2.5 rounded-[10px] ${selectedFilter === filter ? (isDarkMode ? "text-[#FCFCFC] bg-[#475BE8]" : "text-[#FCFCFC] bg-[#475BE8]") : (isDarkMode ? "text-[#6F767E] bg-[#111315]" : "text-[#808191] bg-[#F7F7F7]")}`, onClick: () => handleFilterClick(filter), children: filter.charAt(0).toUpperCase() + filter.slice(1) }, filter))) })] }), (0, jsx_runtime_1.jsx)("div", { className: "grid grid-cols-1 max-lg:gap-y-5 lg:grid-cols-3 gap-x-6", children: filteredProperties.length > 0 ? filteredProperties.map(property => ((0, jsx_runtime_1.jsxs)("div", { onClick: () => navigate("/property"), className: 'w-full sm:flex lg:block justify-between', children: [(0, jsx_runtime_1.jsx)("div", { className: "rounded-[10px] overflow-hidden", children: (0, jsx_runtime_1.jsx)("img", { src: property.img, alt: property.title, className: 'w-full max-sm:max-w-none max-sm:mb-2.5 max-lg:max-w-[250px] block lg:mb-2.5' }) }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between gap-x-2.5 mb-2.5 lg:mb-1", children: [(0, jsx_runtime_1.jsx)("h2", { className: `text-base font-semibold ${isDarkMode ? "text-[#EFEFEF]" : "text-[#11142D]"}`, children: property.title }), (0, jsx_runtime_1.jsx)("p", { className: `font-semibold text-xs py-[7px] px-[9px] rounded-[4px] text-[#475BE8] ${isDarkMode ? "bg-[#111315]" : "bg-[#F0EEFF]"}`, children: property.price })] }), (0, jsx_runtime_1.jsxs)("a", { href: "#", className: `flex items-center gap-1.5 ${isDarkMode ? "text-[#6F767E]" : "text-[#808191]"}`, children: [(0, jsx_runtime_1.jsx)("div", { className: `${isDarkMode ? "text-[#EFEFEF]" : "text-[#11142D]"}`, children: (0, jsx_runtime_1.jsx)("svg", { width: "18", height: "18", viewBox: "0 0 18 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: (0, jsx_runtime_1.jsx)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M15 8.00441C15 9.42437 14.5075 10.7292 13.684 11.7572H13.6875C13.6875 11.7572 11.6022 14.5497 9.98682 16.527C9.47145 17.1579 8.52874 17.1576 8.01367 16.5265C6.40341 14.5535 4.32083 11.7632 4.32083 11.7632L4.31597 11.7572C3.49254 10.7292 3 9.42437 3 8.00441C3 4.68827 5.68629 2 9 2C12.3137 2 15 4.68827 15 8.00441ZM11.2404 7.97842C11.2404 9.21659 10.2374 10.2203 9.0001 10.2203C7.76284 10.2203 6.75984 9.21659 6.75984 7.97842C6.75984 6.74025 7.76284 5.73651 9.0001 5.73651C10.2374 5.73651 11.2404 6.74025 11.2404 7.97842Z", fill: "currentColor" }) }) }), property.location] })] })] }, property.id))) : ((0, jsx_runtime_1.jsx)("p", { className: `${isDarkMode ? "text-[#EFEFEF]" : "text-[#11142D]"}`, children: "No properties available." })) })] })] }));
};
exports.default = Dashboard;
